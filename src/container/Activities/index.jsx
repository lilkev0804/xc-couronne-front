import Head from "next/head";
import React, { useCallback, useEffect, useState } from "react";
import MyNavBar from "../Navbar";
import styles from "./Activities.module.scss";
import { Button, CircularProgress } from "@mui/material";
import { useRouter } from "next/router";
import ActiviteCard from "@/components/ActiviteCard";
import FilterActivites from "./filter";
import _ from "lodash";
export default function ActivitiesContainer({ data }) {
  const router = useRouter();
  const [local, setLocal] = useState([]);
  const [nameEvent, setNameEvent] = useState();
  const [loading, setLoading] = useState(false);
  useEffect(() => {
    setLoading(true);
    setLocal(_.orderBy(data, [(obj) => new Date(obj.date)], ["asc"]));
    setLoading(false);
  }, [data]);
  const handleSubmit = useCallback(
    (e) => {
      setLoading(true);
      let el = [...data];
      if (e?.type) {
        const res = el.filter((el) => el.discipline === e?.type);
        setLocal(res);
        setLoading(false);
        return;
      }
    },
    [data]
  );

  const handleRestart = useCallback(() => {
    setLoading(true);
    setLocal(data);
    setLoading(false);
  }, [data]);

  const searchByName = useCallback(
    (e) => {
      const filter = data?.filter(
        (el) =>
          el.name.toLowerCase().includes(e) ||
          el.ville.toLowerCase().includes(e)
      );
      setLocal(filter);
    },
    [data]
  );

  if (loading) {
    return <CircularProgress />;
  }
  return (
    <>
      <Head>
        <title>XC Couronne</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MyNavBar />
      <main className={styles.main}>
        <div className={styles.container}>
          <div className={styles.buttonContainer}>
            <Button
              onClick={() => router.push("/activites/ajouter")}
              variant="outlined"
            >
              Ajouter une activit√©e
            </Button>
          </div>
          <FilterActivites
            searchBar={{
              onChange: searchByName,
              value: nameEvent,
            }}
            onChange={handleSubmit}
            handleRestart={handleRestart}
          />
          <div className={styles.containerCard}>
            {local?.map((el, i) => (
              <ActiviteCard key={i} data={el} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
